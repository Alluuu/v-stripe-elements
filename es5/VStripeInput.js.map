{"version":3,"sources":["../src/VStripeInput.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VStripeInput.sass'\n// Extensions and Components\nimport { VTextField } from 'vuetify/lib'\n// import { VNode, CreateElement } from 'vue'\n\n// Vuetify Types\n// import 'vuetify/types'\n\n// import { VTextField, VLabel } from 'vuetify/src/components'\n\n// Directives\n// import ripple from 'vuetify/src/directives/ripple'\n\n// Utilities\n// import mixins from 'vuetify/src/util/mixins'\n\nconst VStripeInput = {\n  name: 'v-stripe-input',\n  extends: VTextField,\n  // directives: { ripple },\n  inheritAttrs: false,\n  props: {\n    apiKey: {\n      type: String,\n      required: true,\n    },\n    font: {\n      type: String,\n      default: 'Roboto',\n    },\n    zip: {\n      type: String,\n      default: '',\n    },\n    // appendOuterIcon: String,\n    autofocus: Boolean,\n    // clearable: Boolean,\n    // clearIcon: {\n    //   type: String,\n    //   default: '$vuetify.icons.clear'\n    // },\n    // filled: Boolean,\n    // flat: Boolean,\n    // fullWidth: Boolean,\n    // label: String,\n    // outlined: Boolean,\n    // placeholder: String,\n    // prefix: String,\n    // prependInnerIcon: String,\n    // reverse: Boolean,\n    // rounded: Boolean,\n    // shaped: Boolean,\n    // singleLine: Boolean,\n    // solo: Boolean,\n    // soloInverted: Boolean,\n    // suffix: String,\n  },\n  data: () => ({\n    card: null,\n    cardError: null,\n    elements: null,\n    okToSubmit: false,\n    stripe: null,\n  }),\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-stripe-input': true,\n      }\n    },\n  },\n  // watch: {},\n  created () {\n  },\n  mounted () {\n    // Handle tasks NOT related to actual DOM rendering or manipulation\n    const self = this\n    const style = this.genStyle(this.font, this.$vuetify.theme.currentTheme, this.$vuetify.theme.dark)\n    const classes = { focus: 'focus', empty: 'empty' }\n    const cardProps = { style, classes, value: { postalCode: this.zip, label: 'x' } }\n    self.loading = true\n    this.loadStripe()\n      // initialize the Stripe.js object\n      // @ts-ignore\n      .then(() => Stripe(self.apiKey)) // eslint-disable-line no-undef\n      // then create a Stripe elements generator\n      .then(stripe => stripe.elements(self.genFont(self.font)))\n      // then create a card element\n      .then(elements => elements.create('card', cardProps))\n      // then setup card events and return the card\n      .then(card => {\n        card.on('blur', self.onBlur)\n        card.on('focus', self.onFocus)\n        card.on('ready', e => { self.autofocus && card.focus(); self.$emit('ready', e) })\n        card.on('change', e => {\n          e.error && self.errorBucket.push(e.error.message)\n          e.complete && (self.errorBucket = []) // won't work if there are external rules\n        })\n        return card\n      })\n      .then(card => {\n        card.mount(`#${self.computedId}`)\n        // console.log(card)\n        self.card = card\n        self.loading = false\n      })\n      .catch(err => { console.log(err) })\n  },\n  methods: {\n    genFont: font => ({ fonts: [{ cssSrc: `https://fonts.googleapis.com/css?family=${encodeURI(font)}:400` }] }),\n    // see: https://stripe.com/docs/stripe-js/reference#element-mount\n    // All we need is a <div> with a known ID. This <div> will get\n    // replaced by Stripe with an IFrame with their custom inputs.\n    genInput () {\n      return this.$createElement('div', { attrs: { id: this.computedId } })\n    },\n    genStyle: (font: String, theme: VuetifyThemeVariant, dark = false) => ({\n      base: {\n        color: dark ? '#ffffff' : '#000000',\n        fontFamily: `'${font}', sans-serif`,\n        fontSize: '16px',\n        fontSmoothing: 'antialiased',\n        '::placeholder': {\n          color: dark ? 'rgb(255,255,255,0.7)' : 'rgb(0,0,0,0.54)',\n        },\n        ':focus::placeholder': {\n          color: dark ? 'rgb(255,255,255,0.7)' : 'rgb(0,0,0,0.54)',\n        },\n      },\n      invalid: {\n        color: theme.error,\n        iconColor: theme.error,\n      },\n    }),\n    loadStripe (): Promise<Boolean|Error> {\n      // is Stripe already available?\n      if (typeof Stripe !== 'undefined') return Promise.resolve(true)\n      // is the external script loader available?\n      if (typeof this.$loadScript === 'undefined') {\n        // no\n        throw new Error('[VStripeInput Error]: Stripe is not available and could not be loaded. Please make sure that you have installed and configured all of the necessary dependencies to use this component.')\n      } else {\n        // yes, let's try to get Stripe\n        return this.$loadScript('https://js.stripe.com/v3/')\n          .then(() => true)\n          .catch((err: Error) => {\n            throw new Error('[VStripeInput Error] There was a problem loading Stripe: ' + err.message)\n          })\n      }\n    },\n    onBlur (e) {\n      this.isFocused = false\n      e && this.$emit('blur', e)\n    },\n    onClick () {\n      if (this.isFocused || this.disabled) return\n      this.card.focus()\n    },\n    onFocus (e) {\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n  },\n}\n\nexport default VStripeInput\n"],"sourceRoot":"","file":"VStripeInput.js"}